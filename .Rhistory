ex_vector2 <-c("Hello", "Hi~!") #문자 데이터 Hello, Hi~!를 ex_vector2에 할당
ex_vector1 <- c(-1, 0, 1) #데이터 -1, 0, 1을 ex_vector1에 할당
#숫자형 벡터 (실수형 벡터) ==> 연산도 가능
print(ex_vector1)
str(ex_vector1) #변수의 속성을 확인한다. str()
length(ex_vector1) #벡터 ex_vector1의 길이
ex_vector2 <-c("Hello", "Hi~!") #문자 데이터 Hello, Hi~!를 ex_vector2에 할당
print(ex_vector2)
ex_vector3 <- c("1", "2", "3")
(ex_vector3)
#문자 데이터를 따옴표 ("" 또는 '') 로 감싸서 표현
str(ex_vector2)
#논리형 벡터 logical vector 값이 TRUE FALSE
ex_vector4 <- c(TRUE, FALSE, TRUE, FALSE)
print(ex_vector4)
str(ex_vector4) # 데이터 타입, 길이, 값 다 알려준다.
str(ex_vector4) # 데이터 타입, 길이, 값 다 알려준다.
typeof(ex_vector4) #타입만 정확하게 알려주는 함수
remove(ex_vector1) #rm(ex_vector1)도 가능
print(ex_vector1)
x<-c(1,2,3,4,5,6) #벡터 x 생성
matrix(x , nrow = 2 , ncol = 3) #벡터를 통해 행렬 생성
matrix(c(1,2,3,4,5,6), nrow = 3, ncol = 2, byrow = T) #행이 3개, 열이 2개로 데이터 순서가 왼쪽에서 오른쪽으로 변경됨
y <- c(1,2,3,4,5,6)
array(y, dim=c(2,2,3)) #변수 y를 2+2 행렬, 3차원 배열
list1 <- list(c(1,2,3), "Hello")
print(list1)
str(list1)
list2 <- c("5", 5)
str(list2) #문자열이 하나라도 포함되어 있으면 나머지도 문자로 인식됨
ID <-c(1:10)
SEX <-c("F", "M", "F", "M", "M", "F", "F", "F", "F","M")
AGE <-c(50, 40, 30, 20, 10, 60, 50, 20, 30, 39)
AREA<-c("서울", "경기", "제주", "서울", "경북", "전남", "서울", "제주", "경남", "경기")
#데이터 프레임
dataframe_ex = data.frame(ID, SEX, AGE, AREA)
#데이터 프레임
dataframe_ex <- data.frame(ID, SEX, AGE, AREA)
print(dataframe_ex)
str(dataframe_ex)
